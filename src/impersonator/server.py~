#!/usr/bin/env python
import os, sys, base64
from datetime import datetime

from twisted.web.server import Site
from twisted.web.resource import Resource
from twisted.internet import reactor

sys.path.append("/srv/development/Webinal")
from utilities.structures import TimeExpiredDict
from utilities.io.shell import UserProcess
from utilities.security.cryptography import PubPvtKey

   
def authenticate(username, password, venv=None):
    process = self.processes.get(username)
    if process == None:
        try:
            process = UserProcess(username, password)
            if venv:    
                out = process.run_command("source %s" % venv)
                
            self.processes.add(username, process)
        
        except pxssh.ExceptionPxssh, e:
            print(e)
            return False
        except Exception, err:
            print(err)
            return False
        
    return True
    
    

class Impersonator(Resource):
    
    def __init__(self):
        self.processes = TimeExpiredDict(600)
        with open("pvt.key", "r") as key_file:
            self.key = key_file.read()
    
    
    def render_POST(self, request):
        try:
            data = request.content.read()
            print data
            
            data_arr = data.split("\n")
            
            decoded = base64.b64decode(data_arr[0])
            decrypted = PubPvtKey.decrypt(self.key, decoded)
            credentials = decrypted.split(":")            
                        
            command = data_arr[1]
                    
            if authenticate(credentials[0], credentials[1]):           
                print "Permission granted. Running '%s' as '%s'..." % (command, credentials[0])            
                output = self.processes.get(credentials[0]).run_command(command)            
                print output
                
                return output
            else:
                print "Permission denied!"
                request.setResponseCode(401)
                return "Permission denied!"
        except Exception, err:
            print(err)
            request.setResponseCode(400)
            return "Bad Request"


root = Resource()
root.putChild("impersonate", Impersonator())
factory = Site(root)
reactor.listenTCP(8123, factory)
reactor.run()

