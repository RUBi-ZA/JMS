var Workflow = function(workflow_id, workflow_name, description, stages) {
	this.WorkflowID = ko.observable(workflow_id);
	this.WorkflowName = ko.observable(workflow_name);
	this.Description = ko.observable(description);
	this.Accessibility = ko.observable("Private");
	this.Stages = ko.observableArray(stages);
}

var Stage = function(stage_id, stage_name, dependencies, type, script, script_command, referenced_scripts, command, parameters) {
	this.StageID = ko.observable(stage_id);
	this.StageName = ko.observable(stage_name);
	this.StageDependencies = ko.observableArray();
	this.StageType = ko.observable(type);
	
	//custom script params
	this.Script = ko.observable(script);
	this.ScriptCommand = ko.observable(script_command);
	this.ReferencedScripts = ko.observableArray(referenced_scripts);
	
	//command-line utility
	this.Command = ko.observable(command);
		
	//parameters
	this.Parameters = ko.observableArray(parameters);
}
	
var Parameter = function(param_id, name, prefix, input_by, type, value) {
	this.ParameterID = ko.observable(param_id);
	this.ParameterName = ko.observable(name);
	this.Prefix = ko.observable(prefix);
	this.InputBy = ko.observable(input_by);
	this.Type = ko.observable(type);
	this.Value = ko.observable(value);
}

/*=============================
  WorkflowViewModel
===============================*/
function WorkflowViewModel() {
	var self = this;
	
	//self.Stages = ko.observableArray();
	
	self.Workflows = ko.observableArray();
	self.Workflows.push(new Workflow(1, "3DModel", "Homology modelling pipeline", []));
	self.Workflows.push(new Workflow(2, "Docking", "Docking pipeline", []));
	self.Workflows.push(new Workflow(3, "MDPipe", "Molecular dynamics pipeline", []));
	
	//selected items
	self.Workflow = ko.observable(new Workflow(1, "Test Workflow", "This is a test", null));
	self.Stage = ko.observable(new Stage(-1, "", null, "command", null, "", null, "", [new Parameter(-1, "", "", "user", null, "")]));
	
	//Test data
	self.Workflow(new Workflow(1, "Test Workflow", "This is a test", []));
	self.Workflow().Stages.push(new Stage(1, "Test", null, "script", null, "python command.py", null, "", null));
	self.Workflow().Stages()[0].Parameters.push(new Parameter(-1, "Param", "-i", "system", null, "input.txt"));
	self.Workflow().Stages()[0].Parameters.push(new Parameter(-1, "Param2", "-o", "system", null, "output.txt"));
		
	self.Workflow().Stages.push(new Stage(1, "Test2", null, "script", null, "python command.py", null, "", null));
	self.Workflow().Stages()[1].StageDependencies.push(self.Workflow().Stages()[0]);
	self.Workflow().Stages()[1].Parameters.push(new Parameter(-1, "Param", "-i", "system", null, "input.txt"));
	self.Workflow().Stages()[1].Parameters.push(new Parameter(-1, "Param2", "-o", "system", null, "output.txt"));
		
	self.Workflow().Stages.push(new Stage(1, "Test3", null, "command", null, "", null, "./command.sh", null));
	self.Workflow().Stages()[2].StageDependencies.push(self.Workflow().Stages()[1]);
	self.Workflow().Stages()[2].Parameters.push(new Parameter(-1, "Param", "-i", "user", null, ""));
	self.Workflow().Stages()[2].Parameters.push(new Parameter(-1, "Param2", "-o", "system", null, "output.txt"));
	
	self.AddStage = function() {
		var stage = new Stage(-1, "New Stage", null, "command", null, "", null, "", [new Parameter(-1, "", "", "user", null, "")]);
		self.Workflow().Stages.push(stage);
		
		self.SelectStage(stage);
	}	
	
	self.DeleteStage = function(data) {
		self.Workflow().Stages.remove(data);
	}
	
	self.SelectStage = function(data) {
		self.Stage(data);
		
		$("#stage-container").show();
	}	
	
	self.AddParameter = function() {
		self.Stage().Parameters.push(new Parameter());
	}
	
	self.DeleteParameter = function(data) {
		self.Stage().Parameters.remove(data);
	}
	
	self.ShowWorkflows = function() {
		TransitionDivs("#create_workflow-container", "#workflows-container", 250);				
	}
	
	self.ShowCreateWorkflow = function() {
		TransitionDivs("#workflows-container", "#create_workflow-container", 250);				
	}
}

var workflow = new WorkflowViewModel();
ko.applyBindings(workflow, document.getElementById("workflows"));
